[
  {
    "Id": 87,
    "UserId": 0,
    "ApplicationName": "Newtonsoft.Json",
    "IpAddress": "::1",
    "Version": "https",
    "Host": "localhost:44373",
    "Url": "GET https://localhost:44373/api/log/routes?pageIndex=1&pageSize=10",
    "Source": "Newtonsoft.Json",
    "Form": "",
    "Body": "",
    "Response": "",
    "RequestHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"c3dd1f91-9a46-4271-b302-2d7b2bbf5ff4\"]}",
    "ResponseHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"c3dd1f91-9a46-4271-b302-2d7b2bbf5ff4\"]}",
    "ErrorCode": "JRE",
    "Scheme": "https",
    "TraceId": "8000011e-0002-ff00-b63f-84710c7967bb",
    "Protocol": "HTTP/1.1",
    "Errors": "null",
    "StatusCode": "200",
    "AppStatusCode": "AP1300E",
    "Message": "After parsing a value an unexpected character was encountered: B. Path '[5].Response.data[0].Form', line 143, position 303.",
    "MessageDetails": "After parsing a value an unexpected character was encountered: B. Path '[5].Response.data[0].Form', line 143, position 303.",
    "StackTrace": "\"   at Newtonsoft.Json.JsonTextReader.ParsePostValue(Boolean ignoreComments)\\r\\n   at Newtonsoft.Json.JsonTextReader.Read()\\r\\n   at Newtonsoft.Json.Linq.JContainer.ReadContentFrom(JsonReader r, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(JsonReader reader, JsonLoadSettings options)\\r\\n   at Newtonsoft.Json.Linq.JArray.Load(JsonReader reader, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JArray.Parse(String json, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JArray.Parse(String json)\\r\\n   at WebApp.Core.Loggers.Repositories.RouteLogRepository.GetPageAsync(DapperPager pager) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Loggers\\\\Repositories\\\\Sqls\\\\RouteLogRepository.cs:line 130\\r\\n   at WebApp.Controllers.Logs.LogController.GetRouteLogsAsync(Int32 pageIndex, Int32 pageSize, String searchText) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp\\\\Controllers\\\\Logs\\\\LogController.cs:line 30\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at WebApp.Core.Middlewares.HttpRequestMiddleware.InvokeAsync(HttpContext context, IRouteLogRepository routeLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\HttpRequestMiddleware.cs:line 39\\r\\n   at WebApp.Core.Middlewares.ExceptionMiddleware.InvokeAsync(HttpContext context, IExceptionLogRepository exceptionLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\ExceptionMiddleware.cs:line 48\"",
    "CreatedDateUtc": "2022-06-25T11:47:27"
  },
  {
    "Id": 86,
    "UserId": 0,
    "ApplicationName": "Newtonsoft.Json",
    "IpAddress": "::1",
    "Version": "https",
    "Host": "localhost:44373",
    "Url": "GET https://localhost:44373/api/log/routes?pageIndex=1&pageSize=10",
    "Source": "Newtonsoft.Json",
    "Form": "",
    "Body": "",
    "Response": "",
    "RequestHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"b2e7e3f6-f997-4ef2-94e1-3d065cd72b01\"]}",
    "ResponseHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"b2e7e3f6-f997-4ef2-94e1-3d065cd72b01\"]}",
    "ErrorCode": "JRE",
    "Scheme": "https",
    "TraceId": "800001bf-0005-f100-b63f-84710c7967bb",
    "Protocol": "HTTP/1.1",
    "Errors": "null",
    "StatusCode": "200",
    "AppStatusCode": "AP1300E",
    "Message": "After parsing a value an unexpected character was encountered: B. Path '[0].Response.data[0].Form', line 13, position 303.",
    "MessageDetails": "After parsing a value an unexpected character was encountered: B. Path '[0].Response.data[0].Form', line 13, position 303.",
    "StackTrace": "\"   at Newtonsoft.Json.JsonTextReader.ParsePostValue(Boolean ignoreComments)\\r\\n   at Newtonsoft.Json.JsonTextReader.Read()\\r\\n   at Newtonsoft.Json.Linq.JContainer.ReadContentFrom(JsonReader r, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(JsonReader reader, JsonLoadSettings options)\\r\\n   at Newtonsoft.Json.Linq.JArray.Load(JsonReader reader, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JArray.Parse(String json, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JArray.Parse(String json)\\r\\n   at WebApp.Core.Loggers.Repositories.RouteLogRepository.GetPageAsync(DapperPager pager) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Loggers\\\\Repositories\\\\Sqls\\\\RouteLogRepository.cs:line 130\\r\\n   at WebApp.Controllers.Logs.LogController.GetRouteLogsAsync(Int32 pageIndex, Int32 pageSize, String searchText) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp\\\\Controllers\\\\Logs\\\\LogController.cs:line 30\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at WebApp.Core.Middlewares.HttpRequestMiddleware.InvokeAsync(HttpContext context, IRouteLogRepository routeLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\HttpRequestMiddleware.cs:line 39\\r\\n   at WebApp.Core.Middlewares.ExceptionMiddleware.InvokeAsync(HttpContext context, IExceptionLogRepository exceptionLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\ExceptionMiddleware.cs:line 48\"",
    "CreatedDateUtc": "2022-06-25T11:09:08"
  },
  {
    "Id": 85,
    "UserId": 0,
    "ApplicationName": "Newtonsoft.Json",
    "IpAddress": "::1",
    "Version": "https",
    "Host": "localhost:44373",
    "Url": "GET https://localhost:44373/api/log/routes?pageIndex=1&pageSize=10",
    "Source": "Newtonsoft.Json",
    "Form": "",
    "Body": "",
    "Response": "",
    "RequestHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"b74a0079-bda8-4f39-b85b-9984d337814b\"]}",
    "ResponseHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"b74a0079-bda8-4f39-b85b-9984d337814b\"]}",
    "ErrorCode": "JRE",
    "Scheme": "https",
    "TraceId": "800001be-0005-f100-b63f-84710c7967bb",
    "Protocol": "HTTP/1.1",
    "Errors": "null",
    "StatusCode": "200",
    "AppStatusCode": "AP1300E",
    "Message": "After parsing a value an unexpected character was encountered: B. Path '[0].Response.data[0].Form', line 13, position 303.",
    "MessageDetails": "After parsing a value an unexpected character was encountered: B. Path '[0].Response.data[0].Form', line 13, position 303.",
    "StackTrace": "\"   at Newtonsoft.Json.JsonTextReader.ParsePostValue(Boolean ignoreComments)\\r\\n   at Newtonsoft.Json.JsonTextReader.Read()\\r\\n   at Newtonsoft.Json.Linq.JContainer.ReadContentFrom(JsonReader r, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(JsonReader reader, JsonLoadSettings options)\\r\\n   at Newtonsoft.Json.Linq.JArray.Load(JsonReader reader, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JArray.Parse(String json, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JArray.Parse(String json)\\r\\n   at WebApp.Core.Loggers.Repositories.RouteLogRepository.GetPageAsync(DapperPager pager) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Loggers\\\\Repositories\\\\Sqls\\\\RouteLogRepository.cs:line 130\\r\\n   at WebApp.Controllers.Logs.LogController.GetRouteLogsAsync(Int32 pageIndex, Int32 pageSize, String searchText) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp\\\\Controllers\\\\Logs\\\\LogController.cs:line 30\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at WebApp.Core.Middlewares.HttpRequestMiddleware.InvokeAsync(HttpContext context, IRouteLogRepository routeLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\HttpRequestMiddleware.cs:line 39\\r\\n   at WebApp.Core.Middlewares.ExceptionMiddleware.InvokeAsync(HttpContext context, IExceptionLogRepository exceptionLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\ExceptionMiddleware.cs:line 48\"",
    "CreatedDateUtc": "2022-06-25T11:08:27"
  },
  {
    "Id": 84,
    "UserId": 0,
    "ApplicationName": "Newtonsoft.Json",
    "IpAddress": "::1",
    "Version": "https",
    "Host": "localhost:44373",
    "Url": "GET https://localhost:44373/api/log/routes?pageIndex=1&pageSize=10",
    "Source": "Newtonsoft.Json",
    "Form": "",
    "Body": "",
    "Response": "",
    "RequestHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"9f705964-ac0a-4f28-b03d-03235c032c48\"]}",
    "ResponseHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"9f705964-ac0a-4f28-b03d-03235c032c48\"]}",
    "ErrorCode": "JRE",
    "Scheme": "https",
    "TraceId": "800001bd-0005-f100-b63f-84710c7967bb",
    "Protocol": "HTTP/1.1",
    "Errors": "null",
    "StatusCode": "200",
    "AppStatusCode": "AP1300E",
    "Message": "After parsing a value an unexpected character was encountered: B. Path '[0].Response.data[0].Form', line 13, position 303.",
    "MessageDetails": "After parsing a value an unexpected character was encountered: B. Path '[0].Response.data[0].Form', line 13, position 303.",
    "StackTrace": "\"   at Newtonsoft.Json.JsonTextReader.ParsePostValue(Boolean ignoreComments)\\r\\n   at Newtonsoft.Json.JsonTextReader.Read()\\r\\n   at Newtonsoft.Json.Linq.JContainer.ReadContentFrom(JsonReader r, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(JsonReader reader, JsonLoadSettings options)\\r\\n   at Newtonsoft.Json.Linq.JArray.Load(JsonReader reader, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JArray.Parse(String json, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JArray.Parse(String json)\\r\\n   at WebApp.Core.Loggers.Repositories.RouteLogRepository.GetPageAsync(DapperPager pager) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Loggers\\\\Repositories\\\\Sqls\\\\RouteLogRepository.cs:line 130\\r\\n   at WebApp.Controllers.Logs.LogController.GetRouteLogsAsync(Int32 pageIndex, Int32 pageSize, String searchText) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp\\\\Controllers\\\\Logs\\\\LogController.cs:line 30\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at WebApp.Core.Middlewares.HttpRequestMiddleware.InvokeAsync(HttpContext context, IRouteLogRepository routeLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\HttpRequestMiddleware.cs:line 39\\r\\n   at WebApp.Core.Middlewares.ExceptionMiddleware.InvokeAsync(HttpContext context, IExceptionLogRepository exceptionLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\ExceptionMiddleware.cs:line 48\"",
    "CreatedDateUtc": "2022-06-25T11:04:27"
  },
  {
    "Id": 83,
    "UserId": 0,
    "ApplicationName": "Newtonsoft.Json",
    "IpAddress": "::1",
    "Version": "https",
    "Host": "localhost:44373",
    "Url": "GET https://localhost:44373/api/log/routes?pageIndex=1&pageSize=10",
    "Source": "Newtonsoft.Json",
    "Form": "",
    "Body": "",
    "Response": "",
    "RequestHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"62a5fb66-b4ae-4ea7-82ff-78724f769a31\"]}",
    "ResponseHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"62a5fb66-b4ae-4ea7-82ff-78724f769a31\"]}",
    "ErrorCode": "JRE",
    "Scheme": "https",
    "TraceId": "800001ba-0005-f100-b63f-84710c7967bb",
    "Protocol": "HTTP/1.1",
    "Errors": "null",
    "StatusCode": "200",
    "AppStatusCode": "AP1300E",
    "Message": "After parsing a value an unexpected character was encountered: B. Path '[0].Response.data[0].Form', line 13, position 303.",
    "MessageDetails": "After parsing a value an unexpected character was encountered: B. Path '[0].Response.data[0].Form', line 13, position 303.",
    "StackTrace": "\"   at Newtonsoft.Json.JsonTextReader.ParsePostValue(Boolean ignoreComments)\\r\\n   at Newtonsoft.Json.JsonTextReader.Read()\\r\\n   at Newtonsoft.Json.Linq.JContainer.ReadContentFrom(JsonReader r, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(JsonReader reader, JsonLoadSettings options)\\r\\n   at Newtonsoft.Json.Linq.JArray.Load(JsonReader reader, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JArray.Parse(String json, JsonLoadSettings settings)\\r\\n   at Newtonsoft.Json.Linq.JArray.Parse(String json)\\r\\n   at WebApp.Core.Loggers.Repositories.RouteLogRepository.GetPageAsync(DapperPager pager) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Loggers\\\\Repositories\\\\Sqls\\\\RouteLogRepository.cs:line 130\\r\\n   at WebApp.Controllers.Logs.LogController.GetRouteLogsAsync(Int32 pageIndex, Int32 pageSize, String searchText) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp\\\\Controllers\\\\Logs\\\\LogController.cs:line 30\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at WebApp.Core.Middlewares.HttpRequestMiddleware.InvokeAsync(HttpContext context, IRouteLogRepository routeLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\HttpRequestMiddleware.cs:line 39\\r\\n   at WebApp.Core.Middlewares.ExceptionMiddleware.InvokeAsync(HttpContext context, IExceptionLogRepository exceptionLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\ExceptionMiddleware.cs:line 48\"",
    "CreatedDateUtc": "2022-06-25T10:48:41"
  },
  {
    "Id": 82,
    "UserId": 1,
    "ApplicationName": "WebApp.Service",
    "IpAddress": "103.49.202.37:61725",
    "Version": "https",
    "Host": "dotnetlogger.azurewebsites.net",
    "Url": "POST https://dotnetlogger.azurewebsites.net/api/Token",
    "Source": "WebApp.Service",
    "Form": "",
    "Body": "{\"userName\":\"string\",\"password\":\"string\"}",
    "Response": "",
    "RequestHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Accept-Language\":[\"en-US,en;q=0.9\"],\"Authorization\":[\"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJnaXZlbl9uYW1lIjoiTWQgS2FrdXlhIHRhc2xpbSIsInVuaXF1ZV9uYW1lIjoidGFzbGltIiwiZW1haWwiOiJ0YXNsaW1AZW1haWwuY29tIiwibmFtZWlkIjoiMSIsInJvbGUiOiJhZG1pbiIsIm5iZiI6MTY1NjE1MjI5OCwiZXhwIjoxNjU2MTU1ODk4LCJpYXQiOjE2NTYxNTIyOTgsImlzcyI6Im1lIiwiYXVkIjoibXktZG90bmV0LWxvZ2dlci1hcGkifQ.OkSwOM8ZjQBLNwyvw0xrGMX5TuS1WOdhSjiLqv9hyBo\"],\"Content-Length\":[\"41\"],\"Content-Type\":[\"application/json-patch\\u002Bjson\"],\"Cookie\":[\"ARRAffinity=92ca53ad8db4fbb93d4d3b7d8ab54dcf8ffecb2d731f25b0e91ad575d7534c3f; ARRAffinitySameSite=92ca53ad8db4fbb93d4d3b7d8ab54dcf8ffecb2d731f25b0e91ad575d7534c3f\"],\"Host\":[\"dotnetlogger.azurewebsites.net\"],\"Max-Forwards\":[\"10\"],\"Referer\":[\"https://dotnetlogger.azurewebsites.net/swagger/index.html\"],\"User-Agent\":[\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36\"],\"Origin\":[\"https://dotnetlogger.azurewebsites.net\"],\"sec-ch-ua\":[\"\\u0022 Not A;Brand\\u0022;v=\\u002299\\u0022, \\u0022Chromium\\u0022;v=\\u0022102\\u0022, \\u0022Google Chrome\\u0022;v=\\u0022102\\u0022\"],\"sec-ch-ua-mobile\":[\"?0\"],\"sec-ch-ua-platform\":[\"\\u0022Windows\\u0022\"],\"Sec-Fetch-Site\":[\"same-origin\"],\"Sec-Fetch-Mode\":[\"cors\"],\"Sec-Fetch-Dest\":[\"empty\"],\"X-ARR-LOG-ID\":[\"bf6b9da9-b6f9-47ac-a40e-d87938626bac\"],\"CLIENT-IP\":[\"103.49.202.37:61725\"],\"DISGUISED-HOST\":[\"dotnetlogger.azurewebsites.net\"],\"X-SITE-DEPLOYMENT-ID\":[\"dotnetlogger\"],\"WAS-DEFAULT-HOSTNAME\":[\"dotnetlogger.azurewebsites.net\"],\"X-Forwarded-Proto\":[\"https\"],\"X-AppService-Proto\":[\"https\"],\"X-ARR-SSL\":[\"2048|256|CN=Microsoft Azure TLS Issuing CA 01, O=Microsoft Corporation, C=US|CN=*.azurewebsites.net, O=Microsoft Corporation, L=Redmond, S=WA, C=US\"],\"X-Forwarded-TlsVersion\":[\"1.2\"],\"X-Forwarded-For\":[\"103.49.202.37:61725\"],\"X-Original-URL\":[\"/api/Token\"],\"X-WAWS-Unencoded-URL\":[\"/api/Token\"]}",
    "ResponseHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Accept-Language\":[\"en-US,en;q=0.9\"],\"Authorization\":[\"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJnaXZlbl9uYW1lIjoiTWQgS2FrdXlhIHRhc2xpbSIsInVuaXF1ZV9uYW1lIjoidGFzbGltIiwiZW1haWwiOiJ0YXNsaW1AZW1haWwuY29tIiwibmFtZWlkIjoiMSIsInJvbGUiOiJhZG1pbiIsIm5iZiI6MTY1NjE1MjI5OCwiZXhwIjoxNjU2MTU1ODk4LCJpYXQiOjE2NTYxNTIyOTgsImlzcyI6Im1lIiwiYXVkIjoibXktZG90bmV0LWxvZ2dlci1hcGkifQ.OkSwOM8ZjQBLNwyvw0xrGMX5TuS1WOdhSjiLqv9hyBo\"],\"Content-Length\":[\"41\"],\"Content-Type\":[\"application/json-patch\\u002Bjson\"],\"Cookie\":[\"ARRAffinity=92ca53ad8db4fbb93d4d3b7d8ab54dcf8ffecb2d731f25b0e91ad575d7534c3f; ARRAffinitySameSite=92ca53ad8db4fbb93d4d3b7d8ab54dcf8ffecb2d731f25b0e91ad575d7534c3f\"],\"Host\":[\"dotnetlogger.azurewebsites.net\"],\"Max-Forwards\":[\"10\"],\"Referer\":[\"https://dotnetlogger.azurewebsites.net/swagger/index.html\"],\"User-Agent\":[\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36\"],\"Origin\":[\"https://dotnetlogger.azurewebsites.net\"],\"sec-ch-ua\":[\"\\u0022 Not A;Brand\\u0022;v=\\u002299\\u0022, \\u0022Chromium\\u0022;v=\\u0022102\\u0022, \\u0022Google Chrome\\u0022;v=\\u0022102\\u0022\"],\"sec-ch-ua-mobile\":[\"?0\"],\"sec-ch-ua-platform\":[\"\\u0022Windows\\u0022\"],\"Sec-Fetch-Site\":[\"same-origin\"],\"Sec-Fetch-Mode\":[\"cors\"],\"Sec-Fetch-Dest\":[\"empty\"],\"X-ARR-LOG-ID\":[\"bf6b9da9-b6f9-47ac-a40e-d87938626bac\"],\"CLIENT-IP\":[\"103.49.202.37:61725\"],\"DISGUISED-HOST\":[\"dotnetlogger.azurewebsites.net\"],\"X-SITE-DEPLOYMENT-ID\":[\"dotnetlogger\"],\"WAS-DEFAULT-HOSTNAME\":[\"dotnetlogger.azurewebsites.net\"],\"X-Forwarded-Proto\":[\"https\"],\"X-AppService-Proto\":[\"https\"],\"X-ARR-SSL\":[\"2048|256|CN=Microsoft Azure TLS Issuing CA 01, O=Microsoft Corporation, C=US|CN=*.azurewebsites.net, O=Microsoft Corporation, L=Redmond, S=WA, C=US\"],\"X-Forwarded-TlsVersion\":[\"1.2\"],\"X-Forwarded-For\":[\"103.49.202.37:61725\"],\"X-Original-URL\":[\"/api/Token\"],\"X-WAWS-Unencoded-URL\":[\"/api/Token\"]}",
    "ErrorCode": "BRE",
    "Scheme": "https",
    "TraceId": "8001124f-0000-f000-b63f-84710c7967bb",
    "Protocol": "HTTP/1.1",
    "Errors": "null",
    "StatusCode": "200",
    "AppStatusCode": "AP1300E",
    "Message": "Invalid Credentials",
    "MessageDetails": "Invalid Credentials",
    "StackTrace": "\"   at WebApp.Service.Services.Accounts.UserService.LoginGenerateJwtTokenAsync(String userName, String password) in D:\\\\a\\\\1\\\\s\\\\WebApp.Service\\\\Services\\\\Accounts\\\\UserService.cs:line 61\\r\\n   at WebApp.Controllers.Auths.TokenController.GenerateTokenFromBody(LoginVm model) in D:\\\\a\\\\1\\\\s\\\\WebApp\\\\Controllers\\\\Auths\\\\TokenController.cs:line 26\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at WebApp.Core.Middlewares.HttpRequestMiddleware.InvokeAsync(HttpContext context, IRouteLogRepository routeLogRepository) in D:\\\\a\\\\1\\\\s\\\\WebApp.Core\\\\Middlewares\\\\HttpRequestMiddleware.cs:line 49\\r\\n   at WebApp.Core.Middlewares.ExceptionMiddleware.InvokeAsync(HttpContext context, IExceptionLogRepository exceptionLogRepository) in D:\\\\a\\\\1\\\\s\\\\WebApp.Core\\\\Middlewares\\\\ExceptionMiddleware.cs:line 69\"",
    "CreatedDateUtc": "2022-06-25T10:32:16"
  },
  {
    "Id": 81,
    "UserId": 0,
    "ApplicationName": "WebApp.Service",
    "IpAddress": "::1",
    "Version": "https",
    "Host": "localhost:44373",
    "Url": "POST https://localhost:44373/api/account/role/add",
    "Source": "WebApp.Service",
    "Form": "",
    "Body": "{\r\n  \"name\": \"admin\",\r\n  \"description\": \"Administrator\"\r\n}",
    "Response": "",
    "RequestHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Content-Length\":[\"58\"],\"Content-Type\":[\"application/json\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"1b368cbd-5afe-4d1d-9631-d88f2455ae50\"]}",
    "ResponseHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Content-Length\":[\"58\"],\"Content-Type\":[\"application/json\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"1b368cbd-5afe-4d1d-9631-d88f2455ae50\"]}",
    "ErrorCode": "AE",
    "Scheme": "https",
    "TraceId": "8000004d-0003-fd00-b63f-84710c7967bb",
    "Protocol": "HTTP/1.1",
    "Errors": "null",
    "StatusCode": "404",
    "AppStatusCode": "AP1504E",
    "Message": "Role already exists with name admin",
    "MessageDetails": "Role already exists with name admin",
    "StackTrace": "\"   at WebApp.Service.Services.Accounts.UserService.AddRoleAsync(Role role) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Service\\\\Services\\\\Accounts\\\\UserService.cs:line 101\\r\\n   at WebApp.Controllers.Auths.AccountController.AddRole(RoleVm model) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp\\\\Controllers\\\\Auths\\\\AccountController.cs:line 65\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at WebApp.Core.Middlewares.HttpRequestMiddleware.InvokeAsync(HttpContext context, IRouteLogRepository routeLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\HttpRequestMiddleware.cs:line 39\\r\\n   at WebApp.Core.Middlewares.ExceptionMiddleware.InvokeAsync(HttpContext context, IExceptionLogRepository exceptionLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\ExceptionMiddleware.cs:line 48\"",
    "CreatedDateUtc": "2022-06-25T09:56:03"
  },
  {
    "Id": 80,
    "UserId": 0,
    "ApplicationName": "WebApp.Service",
    "IpAddress": "::1",
    "Version": "https",
    "Host": "localhost:44373",
    "Url": "POST https://localhost:44373/api/account/role/add",
    "Source": "WebApp.Service",
    "Form": "",
    "Body": "{\r\n  \"name\": \"admin\",\r\n  \"description\": \"Administrator\"\r\n}",
    "Response": "",
    "RequestHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Content-Length\":[\"58\"],\"Content-Type\":[\"application/json\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"f2a51c92-5064-4a57-909d-8ff234e770a9\"]}",
    "ResponseHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Content-Length\":[\"58\"],\"Content-Type\":[\"application/json\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"f2a51c92-5064-4a57-909d-8ff234e770a9\"]}",
    "ErrorCode": "AE",
    "Scheme": "https",
    "TraceId": "80000051-0003-fa00-b63f-84710c7967bb",
    "Protocol": "HTTP/1.1",
    "Errors": "null",
    "StatusCode": "404",
    "AppStatusCode": "AP1504E",
    "Message": "Role already exists with name admin",
    "MessageDetails": "Role already exists with name admin",
    "StackTrace": "\"   at WebApp.Service.Services.Accounts.UserService.AddRoleAsync(Role role) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Service\\\\Services\\\\Accounts\\\\UserService.cs:line 101\\r\\n   at WebApp.Controllers.Auths.AccountController.AddRole(RoleVm model) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp\\\\Controllers\\\\Auths\\\\AccountController.cs:line 65\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at WebApp.Core.Middlewares.HttpRequestMiddleware.InvokeAsync(HttpContext context, IRouteLogRepository routeLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\HttpRequestMiddleware.cs:line 39\\r\\n   at WebApp.Core.Middlewares.ExceptionMiddleware.InvokeAsync(HttpContext context, IExceptionLogRepository exceptionLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\ExceptionMiddleware.cs:line 48\"",
    "CreatedDateUtc": "2022-06-25T09:02:33"
  },
  {
    "Id": 79,
    "UserId": 0,
    "ApplicationName": "WebApp.Service",
    "IpAddress": "::1",
    "Version": "https",
    "Host": "localhost:44373",
    "Url": "POST https://localhost:44373/api/account/role/add",
    "Source": "WebApp.Service",
    "Form": "",
    "Body": "{\r\n  \"name\": \"admin\",\r\n  \"description\": \"Administrator\"\r\n}",
    "Response": "",
    "RequestHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Content-Length\":[\"58\"],\"Content-Type\":[\"application/json\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"3d3d3227-56b9-4b30-8815-f43649a51f3b\"]}",
    "ResponseHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Content-Length\":[\"58\"],\"Content-Type\":[\"application/json\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"3d3d3227-56b9-4b30-8815-f43649a51f3b\"]}",
    "ErrorCode": "AE",
    "Scheme": "https",
    "TraceId": "80000050-0003-fa00-b63f-84710c7967bb",
    "Protocol": "HTTP/1.1",
    "Errors": "null",
    "StatusCode": "404",
    "AppStatusCode": "AP1504E",
    "Message": "Role already exists with name admin",
    "MessageDetails": "Role already exists with name admin",
    "StackTrace": "\"   at WebApp.Service.Services.Accounts.UserService.AddRoleAsync(Role role) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Service\\\\Services\\\\Accounts\\\\UserService.cs:line 101\\r\\n   at WebApp.Controllers.Auths.AccountController.AddRole(RoleVm model) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp\\\\Controllers\\\\Auths\\\\AccountController.cs:line 65\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at WebApp.Core.Middlewares.HttpRequestMiddleware.InvokeAsync(HttpContext context, IRouteLogRepository routeLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\HttpRequestMiddleware.cs:line 39\\r\\n   at WebApp.Core.Middlewares.ExceptionMiddleware.InvokeAsync(HttpContext context, IExceptionLogRepository exceptionLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\ExceptionMiddleware.cs:line 48\"",
    "CreatedDateUtc": "2022-06-25T09:01:31"
  },
  {
    "Id": 78,
    "UserId": 0,
    "ApplicationName": "WebApp.Service",
    "IpAddress": "::1",
    "Version": "https",
    "Host": "localhost:44373",
    "Url": "POST https://localhost:44373/api/account/role/add",
    "Source": "WebApp.Service",
    "Form": "",
    "Body": "{\r\n  \"name\": \"admin\",\r\n  \"description\": \"Administrator\"\r\n}",
    "RequestHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Content-Length\":[\"58\"],\"Content-Type\":[\"application/json\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"68762ae0-69db-49a8-92c0-bb152a15f215\"]}",
    "ResponseHeaders": "{\"Accept\":[\"*/*\"],\"Accept-Encoding\":[\"gzip, deflate, br\"],\"Cache-Control\":[\"no-cache\"],\"Connection\":[\"keep-alive\"],\"Content-Length\":[\"58\"],\"Content-Type\":[\"application/json\"],\"Host\":[\"localhost:44373\"],\"User-Agent\":[\"PostmanRuntime/7.29.0\"],\"Postman-Token\":[\"68762ae0-69db-49a8-92c0-bb152a15f215\"]}",
    "ErrorCode": "AE",
    "Scheme": "https",
    "TraceId": "80000076-0003-fc00-b63f-84710c7967bb",
    "Protocol": "HTTP/1.1",
    "Errors": "null",
    "StatusCode": "404",
    "AppStatusCode": "AP1504E",
    "Message": "Role already exists with name admin",
    "MessageDetails": "Role already exists with name admin",
    "StackTrace": "\"   at WebApp.Service.Services.Accounts.UserService.AddRoleAsync(Role role) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Service\\\\Services\\\\Accounts\\\\UserService.cs:line 101\\r\\n   at WebApp.Controllers.Auths.AccountController.AddRole(RoleVm model) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp\\\\Controllers\\\\Auths\\\\AccountController.cs:line 65\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\r\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\\r\\n   at WebApp.Core.Middlewares.HttpRequestMiddleware.InvokeAsync(HttpContext context, IRouteLogRepository routeLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\HttpRequestMiddleware.cs:line 39\\r\\n   at WebApp.Core.Middlewares.ExceptionMiddleware.InvokeAsync(HttpContext context, IExceptionLogRepository exceptionLogRepository) in C:\\\\Projects\\\\Documents\\\\github\\\\webapp\\\\WebApp.Core\\\\Middlewares\\\\ExceptionMiddleware.cs:line 48\"",
    "CreatedDateUtc": "2022-06-25T08:58:56"
  }
]