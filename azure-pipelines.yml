trigger:
  branches:
    include:
      - main
      - master
      - develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  # disable.coverage.autogenerate: 'true'

steps:
- script: echo Directories - $(Build.SourcesDirectory) - $(Agent.TempDirectory)
- script: printenv

- task: SonarQubePrepare@5
  displayName: 'SonarQube Preapare'
  condition: eq(variables.isMaster, 'true')
  inputs:
    SonarQube: 'Azure 2023 VM SonarQube'
    scannerMode: 'MSBuild'
    projectKey: 'DotnetCoreLogger'
    projectName: 'DotnetCoreLogger'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: "**/*.csproj"


- task: DotNetCoreCLI@2
  displayName: 'dotnet build $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'WebApp Core Test'
  inputs:
    command: test
    projects: 'WebApp.Core.Test/WebApp.Core.Test.csproj'
    arguments: '
      --configuration $(buildConfiguration)
      --no-build
      --no-restore
      --logger "trx;LogFileName=testresults.trx" 
      /p:CollectCoverage=true
      /p:CoverletOutputFormat=cobertura
      /p:CoverletOutput=./TestResults/
      /p:Threshold=0
      /p:ThresholdType=line
      /p:Exclude="[WebApp.Sql]*%2c[WebApp.Service]*"
    '
- script: |
    cd $(Build.SourcesDirectory)
    dir
# - task: reportgenerator@5
#   inputs:
#     reports: $(Build.SourcesDirectory)\**\TestResults\coverage.cobertura.xml
#     targetdir: $(Build.SourcesDirectory)\coveragereport
#     reporttypes: 'HTML;HtmlInline_AzurePipelines;Badges;Cobertura'
#     assemblyfilters: '-*tests*'
#     title: 'Dotnet Logger Report'
#     tag: '$(build.buildnumber)_#$(build.buildid)'

- task: PublishCodeCoverageResults@1
  displayName: 'Dotnet Test Publish Code Coverage'
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: $(Build.SourcesDirectory)/**/TestResults/coverage.cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)/coveragereport
    failIfCoverageEmpty: false

# - task: PublishCodeCoverageResults@1
#   displayName: 'Dotnet Test Publish Code Coverage'
#   inputs:
#     codeCoverageTool: 'cobertura'
#     summaryFileLocation: $(Build.SourcesDirectory)\coveragereport\Cobertura.xml
#     reportDirectory: $(Build.SourcesDirectory)\coveragereport
#     failIfCoverageEmpty: false

- task: SonarQubeAnalyze@5
  condition: eq(variables.isMaster, 'true')
- task: SonarQubePublish@5
  condition: eq(variables.isMaster, 'true')
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: 'Artifact Generate'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: PublishPipelineArtifact@1
  displayName: 'Upload Artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'DotnetCoreLoggerSite'
